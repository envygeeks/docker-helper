#!/bin/bash
[ -n "$DEBUG" ] && set -x
set -e

if ! which "usermod"; then
  installed_usermod_in_script=true
  if cat /etc/issue | grep -qEi alpine
    then apk --update add shadow@community || apk --update add  shadow@communityEdge
    else sudo apt-get update && \
      sudo apt-get install passwd
  fi
fi

# --

if [ $# -gt 1 ]; then
  echo "Only one user can be reset at a time."
  exit 1
fi

# --

sed -ri "s!:Linux User,{3}:!:linux-user:!" /etc/passwd
canonical=$(echo $1 | awk -F: '{ print $1 }')
  new_uid=$(echo $1 | awk -F: '{ print $2 }')
  new_gid=$(echo $1 | awk -F: '{ print $3 }')

# --

old_gid=$(getent  group $canonical | awk -F: '{ print $3 }')
old_uid=$(getent passwd $canonical | awk -F: '{ print $3 }')

# --

if [ -z "$new_gid" ]
  then new_gid=$new_uid
fi

# --

status=0
usermod -u $new_uid $canonical || status=$?
if [ "$(id -u $canonical)" = "$new_uid" ]; then
  status=0

  if getent group $canonical > /dev/null; then
    groupmod -g $new_gid $canonical
    find /{bin,usr,etc,lib,sbin,usr,var,root,home} \
      -group $old_gid -print0 | \
      xargs chgrp -h $new_gid
  fi

  # --

  find /{bin,usr,etc,lib,sbin,usr,var,root,home} \
    -user $old_uid -print0 | \
    xargs chown -h $new_uid
fi

# --

if [ "$installed_usermod_in_script" = "true" ]; then
  if cat /etc/issue | grep -qEi alpine
    then apk --update del shadow
    else sudo apt-get autoremove \
      --purge passwd
  fi
fi

# --

exit $status
